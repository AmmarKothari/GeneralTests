var prefix = "https://pchat.bovada.lv/netagent/proactive/";var invLeft = 100;var invTop = 100;var invJumpDist = 1;var pollInterval = 10000;var slidingOption = 0;var stopLoc = 0; 
var invitationLevel = 5;var slideInterval = 90;var invHgt = 80;var invWdt = 200;var vPopUp = ''; if (typeof(talInvTop) == "number")   invTop = talInvTop;   if (typeof(talInvLeft) != "undefined")   invLeft = talInvLeft;  var isFromTac = ("undefined" != document.location && document.location.href.indexOf("?") < document.location.href.indexOf("isfromtac"));  var Response = {nothing : 0, neverEverInvite: 1, neverInvite : 2, stop : 4, notCurrentPage : 8, inviteTimeOut: 16, showInviteNewWin : 32, showInviteSameWin : 64, pushPageSamewin : 256, pushPageNewWin : 128, resendInfo : 512, showChat : 1024, showReactive : 2048, showInviteFlyout : 4096}; var invite = {Left: 1, Top: 2, Right: 3, Bottom: 4 }; var inviteStatus = {Proactive: 1, Reactive: 2}; var inviteWinStyle = {None: 0, NewWin: 1, SameWin: 2, Flyout: 3}; if (typeof(talSlidingOpt) == "number")   slidingOption = talSlidingOpt; if (typeof(talStopLoc) == "number")   stopLoc = talStopLoc; if (typeof(talSlideDist) == "number")   invJumpDist = talSlideDist; var startLoc = (slidingOption == 2)? invTop : invLeft; var slideUnits = invJumpDist * ((stopLoc > -1 && startLoc > stopLoc)?-1:1); var custProp = ""; if(typeof(talCustProp) != "undefined") custProp = talCustProp; var proactive = {  SlideOption:{   SlideTimer:null,   HSlideTo:0,   VSlideTo:0,   SlideAt:0,   SlideOf:0,   SlideFor:0,   SlideHStopAt:0,   SlideVStopAt:0,   SlideStartedAt:null,   SlideStopAt:null,   SlidePaused:false,   SlideStopped:false  },  StartSliding:function()  {   if (this.SlideOption.SlideStopped == true)return;   this.SlideOption.SlideTimer = setTimeout("slideInvite()", this.SlideOption.SlideAt);  },  PauseSliding:function()  {   this.SlideOption.SlidePaused = true;   if (this.SlideOption.SlideTimer)clearTimeout(this.SlideOption.SlideTimer);   this.SlideOption.SlideTimer = null;  },  ResumeSliding:function()  {   if (this.SlideOption.SlidePaused == true)this.SlideOption.SlidePaused = false;   if (this.SlideOption.SlideStopped == false)this.StartSliding();  },  StopSliding:function()  {   if (this.SlideOption.SlideTimer)clearTimeout(this.SlideOption.SlideTimer);   this.SlideOption.SlideStopped = true;  },  InviteJSON:null }; var oPopup = document.createElement("div"); oPopup.id = "popupwin"; document.body.appendChild(oPopup); oPopup.style.position = "absolute"; oPopup.style.top = 'auto'; oPopup.style.left = 'auto'; oPopup.style.zIndex = invitationLevel; oPopup.style.height = "1px"; oPopup.style.width = "1px"; oPopup.innerHTML = vPopUp;  var lastVisitCookie = getCookie("LastVisit"); var lastInviteCookie = getCookie("LastInvite"); var neverCookie = getCookie("NeverInvite"); if(lastVisitCookie == null){lastVisitCookie = "";} else { lastVisitCookie = getDateStringFromUTCString(lastVisitCookie); }  var dt = new Date(2999,1,1); var dtT = new Date(); var dtToday = dtT.toUTCString(); setCookie("LastVisit", dtToday, dt); if(lastInviteCookie == null){lastInviteCookie = "";} else{ lastInviteCookie = getDateStringFromUTCString(lastInviteCookie); }  var resendCount = 0; var curPageID = null;  var na_pro_img = null; var na_pro_img2 = null;  var CorsAjax = null; var RequestInProcess = false; var arrRequests = new Array(); var proStatus = null; var mcsProactive = {OnResponse:null,RespondedAt:null,SSGD:null}; function CorsCall(strUri, reqMethod, postData, fnCallBack) {  try{   if (RequestInProcess == true)   {    arrRequests.push({uri:strUri, method:reqMethod, data:postData, callback: fnCallBack});    return;   }   RequestInProcess = true;   if (CorsAjax == null)   {    if (window.XMLHttpRequest)     CorsAjax = new XMLHttpRequest();    else     CorsAjax = new ActiveXObject("Microsoft.XMLHTTP");   }   CorsAjax.open(reqMethod, strUri, true);   CorsAjax.onreadystatechange = function(){CorsCallBack(fnCallBack);};   CorsAjax.withCredentials = true;   if (reqMethod.search(/post/ig) >= 0)   {    CorsAjax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");    CorsAjax.send(postData);   }   else   {    CorsAjax.send();   }  }  catch(e)  {   RequestInProcess = false;  } } function CorsCallBack(fnCallBack) {  if (fnCallBack != "")  {   var CallBack = eval(fnCallBack);   if (CallBack != null)   {    CallBack(CorsAjax);   }  }  RequestInProcess=false;  if (arrRequests.length > 0)  {   var reqObj = arrRequests.pop();   var strCallBack = "null";   if (reqObj.callback != null)   {    reqObj.callback.toString().match(/function\s+(\S[^(]+)/i);    strCallBack = RegExp.$1;   }  } } function sendVisitInfo() {  setCurrentPageId();  var d = new Date();  var strUri = prefix+'Visitor.aspx?Cmd=1&RSND=' + resendCount;  var postData = 'cpId=' + curPageID + '&LASTVISIT=' + escape(lastVisitCookie) + ( (neverCookie != null)?('&NEVERINVITE=' + escape(neverCookie)) :"" ) +    '&LASTINVITE=' + escape(lastInviteCookie) + '&LT=' + d.getTime() + '&corsEnabled=1&CUSTOMVARIABLES=' + escape(custProp) +   '&TITLE='+ escape((document.title != "")? document.title : document.location ) + '&REFERRER=' + escape(document.referrer);  CorsCall(strUri, "POST", postData, "checkResponse");  d = null; }  function setCurrentPageId() {  var temp = new Date();  temp = temp.getTime();  curPageID = Math.floor(Math.random() * temp);  temp = null; } if (false == isFromTac && navigator.cookieEnabled) sendVisitInfo(); var pollTimerId = null; function pollServer(cmd, isTrigger) { if (stopMonitoring) return; if (cmd == undefined) cmd = 2; if (isTrigger == true)pollTimerId = null; var now = new Date();  if(typeof(talCustProp) != "undefined") custProp = talCustProp; var strUri = prefix+ 'Visitor.aspx?cmd='+cmd+ '&rand='+now.getTime(); var postData = 'cpId=' + curPageID + '&LASTINVITE=' + escape(lastInviteCookie) + '&corsEnabled=1&CUSTOMVARIABLES=' + escape(custProp) +   '&respondedat=' + mcsProactive.RespondedAt + '&ssgd=' + mcsProactive.SSGD; now = null; CorsCall(strUri, "POST", postData, "checkResponse"); }  var stopMonitoring = isFromTac; var newWindowHeight = ""; var newWindowWidth = ""; var newWindowResize = true;   function checkResponse() {  if (CorsAjax == null || CorsAjax.readyState != 4)  {   return;  }  if (CorsAjax.status != 200)  {   return;  }  var resText = CorsAjax.responseText;  if (mcsProactive.OnResponse)mcsProactive.OnResponse(resText);  var jsonObj = null;  try  {   if (CorsAjax.getResponseHeader("Content-Type").search(/application\/json/ig) >= 0)   {    jsonObj = eval("(" + resText + ")");    mcsProactive.RespondedAt = jsonObj.RespondedAt;    mcsProactive.SSGD = jsonObj.SSGD;   }  }  catch(e)  {   return;  }  if (jsonObj != null)  {   var fnParam = 0;   switch (jsonObj.Type) {    case Response.nothing:     break;    case Response.showInviteNewWin:     proactive.InviteJSON = jsonObj;     newWindowHeight = jsonObj.NewWindowHeight;     newWindowWidth = jsonObj.NewWindowWidth;     newWindowResize = jsonObj.NewWindowResize;     popInvite(jsonObj);     break;    case Response.showInviteSameWin:     proactive.InviteJSON = jsonObj;     popInvite(jsonObj);     break;    case Response.showInviteFlyout:     proactive.InviteJSON = jsonObj;     popInvite(jsonObj);     break;    case Response.showChat:     /*showChat(jsonObj);*/     break;    case Response.showReactive:     proactive.InviteJSON = jsonObj;     ProactiveResize(null, 0, true);     break;    case Response.pushPageSamewin:     PushPage(jsonObj);     break;    case Response.pushPageNewWin:     PushPage(jsonObj);     break;    case Response.inviteTimeOut:     ProactivetimeOutInvite();     break;    case Response.neverEverInvite:     fnParam = 1;    case Response.neverInvite:     if (fnParam == 0) fnParam = 2;     setNeverInviteCookie(fnParam);     pollServer(12);     break;    case Response.resendInfo:     if (navigator.cookieEnabled && resendCount < 1) {      sendVisitInfo();      resendCount++;     }     break;    case Response.stop:    case Response.notCurrentPage:     stopMonitoring = true;     if (document.getElementById("popupwin").style.display == "block")      hideInvite(false);     break;    default: break;   }  }   if (jsonObj == null || jsonObj.Type != Response.resendInfo && pollTimerId == null)  {   resendCount = 0;   pollTimerId = setTimeout("pollServer(2, true)", pollInterval);  } }   function PushPage(jsonObj) {  var now = new Date();  var arrUrl = eval(jsonObj.Urls);  if (arrUrl.length == 1 && jsonObj.Type == Response.pushPageSameWin) document.location = arrUrl[0];   else if (arrUrl.length > 0)  {   for (var i = 0;i < arrUrl.length;i++)   {    window.open(arrUrl[i], "_blank");   }  } } function popInvite(jsonObj){ if (proactive.SlideOption.SlideTimer)clearTimeout(proactive.SlideOption.SlideTimer); var miniImg = document.createElement("img"); miniImg.onload = function(){var Width = miniImg.width;var Height = miniImg.height;popInviteDisplay(jsonObj, Width, Height)}; miniImg.src = jsonObj.PortalImg;} function popInviteDisplay(jsonObj, Width, Height) {  var dt = new Date(2999,1,1);  var dtT = new Date();  var dtToday = dtT.toUTCString();  setCookie("LastInvite", dtToday, dt);  lastInviteCookie = getDateStringFromUTCString(dtToday);  if (oPopup != null)  {   positionInvite(jsonObj, Width, Height);   var url = jsonObj.PortalImg;   var inInv = document.getElementById("inv");   if(inInv.src != url)   {    inInv.src=url;   }   offsetInvite();   document.getElementById("popupwin").style.display="block";  }   pollServer(3);  window.focus();  ProStatus = inviteStatus.Proactive; } function showChat(jsonObj) {  var inviteJSON = proactive.InviteJSON;  if ((inviteJSON.Type == Response.showInviteFlyout || inviteJSON.ChatWinStyle == inviteWinStyle.Flyout) && typeof (MoxieFlyout) != 'undefined' && typeof (MoxieFlyout.init) != 'undefined')  {   inviteJSON.PortalUrl = MoxieFlyout.addQueryStringToUrl(inviteJSON.PortalUrl, MoxieFlyout.queryStringType.FullScreen);   MoxieFlyout.init({    portalID: inviteJSON.PortalID,    style: inviteJSON.FlyoutSetting.StyleId,    questionnaire: inviteJSON.FlyoutSetting.QuestionnaireId,    flySide: inviteJSON.FlyoutSetting.DockSide,    sideOffset: inviteJSON.FlyoutSetting.DockOffset,    tabColor: inviteJSON.FlyoutSetting.TabColor,    tabText: inviteJSON.FlyoutSetting.TabText,    tabTextColor: inviteJSON.FlyoutSetting.TabTextColor,    flyWidth: inviteJSON.FlyoutSetting.Width,    flyHeight: inviteJSON.FlyoutSetting.Height,    isFullscreen: (DetectAndroidPhone() || DetectIphoneOrIpod() || DetectWindowsPhone7()),    flyBackColor: inviteJSON.FlyoutSetting.BackColor,    flyTitleColor: inviteJSON.FlyoutSetting.TitleColor,    flyTitleTextColor: inviteJSON.FlyoutSetting.TitleTextColor,    flyBtnColor: inviteJSON.FlyoutSetting.ButtonColor,    fontTab: inviteJSON.FlyoutSetting.FontTab,    fontTitle: inviteJSON.FlyoutSetting.FontTitle,    startOpen: inviteJSON.FlyoutSetting.StartOpen,    serverURL: inviteJSON.FlyoutSetting.ServerURL,    portalURL: inviteJSON.PortalUrl,    currentPagePortalId: inviteJSON.PortalID,    currentPagePortalStyle: inviteJSON.FlyoutSetting.StyleId,    currentPageQuestionnaire: inviteJSON.FlyoutSetting.QuestionnaireId,    openUrl: inviteJSON.PortalUrl   });   MoxieFlyout.setFlyoutBtn({    id: "MoxieFlyoutBtn1",    text: inviteJSON.FlyoutSetting.HideChatText,    accessKey: "h",    title: inviteJSON.FlyoutSetting.HideChatText   });   MoxieFlyout.open();  }  else if (inviteJSON.Type == Response.showInviteNewWin || inviteJSON.Type == Response.showInviteFlyout || inviteJSON.ChatWinStyle == inviteWinStyle.NewWin)  {   var Url = inviteJSON.PortalUrl;   var oWin = window.open(Url, "_blank", "location=no,menubar=no,toolbar=no,height=" + newWindowHeight + "px,width=" + newWindowWidth + "px,resizable=" + (newWindowResize ? "yes" : "no"));   if (!(oWin != null && typeof(oWin) == "object"))    {    PortalBlocked();   }  }  else  {    document.location.href = inviteJSON.PortalUrl;  } } function positionInvite(jsonObj, Width, Height) {  var acceptMapType = "rect";  var denyMapType = "rect";  var neverMapType = "rect";  var minimizeMapType = "rect";  var laterMapType = "rect";  var vPopUp = '<img id="inv" usemap="#imageMap" style="border:0px none;" src="' + jsonObj.PortalImg + '"/><map name="imageMap">';  if (typeof(jsonObj.AcceptImgMap) != 'undefined')  {   if (jsonObj.AcceptImgMap.split(",").length > 4) acceptMapType = "poly";   vPopUp += '<area shape="' + acceptMapType + '" coords="' + jsonObj.AcceptImgMap + '" href="javascript:void(0)" ' +   'onclick="javascript:ProactiveAccept(this)" id="proactiveaccept" onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />';  }  if (typeof(jsonObj.DenyImgMap) != 'undefined')  {   if (jsonObj.DenyImgMap.split(",").length > 4) denyMapType = "poly";   vPopUp += '<area shape="' + denyMapType + '" coords="' + jsonObj.DenyImgMap + '" href="javascript:void(0)" onclick="javascript:ProactiveDecline(this,0)" id="proactivedecline" ' +   'onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />';  }  if (typeof(jsonObj.NeverImgMap) != 'undefined')  {   if (jsonObj.NeverImgMap.split(",").length > 4) neverMapType = "poly";   vPopUp += '<area shape="' + neverMapType + '" coords="' + jsonObj.NeverImgMap + '" href="javascript:void(0)" onclick="javascript:ProactiveDecline(this,1)" id="proactivedecline" ' +   'onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />';  }  if (typeof (jsonObj.InviteMinimizeSetting) != 'undefined' && typeof (jsonObj.InviteMinimizeSetting.LaterImgMap) != 'undefined')  {   if (jsonObj.InviteMinimizeSetting.LaterImgMap.split(",").length > 4) laterMapType = "poly";   vPopUp += '<area shape="' + laterMapType + '" coords="' + jsonObj.InviteMinimizeSetting.LaterImgMap + '" href="javascript:void(0)" onclick="javascript:ProactiveResize(this,2)" id="proactiveminimize" ' +   'onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />';  }  vPopUp += '</map>';  oPopup.innerHTML = vPopUp;  oPopup.style.width = Width + 'px';  oPopup.style.height = Height + 'px';/*  oPopup.style.height = document.getElementById("inv").clientHeight;  oPopup.style.width = document.getElementById("inv").clientWidth;*/  if (jsonObj.DisplayStyle == 3)  {   oPopup.style.position = "fixed";   oPopup.style.left = 'auto';   oPopup.style.top = 'auto';   oPopup.style.right = 'auto';   oPopup.style.bottom = 'auto';   switch (jsonObj.InviteDockSetting.DockType)   {    case invite.Left:     oPopup.style.left = "2px";     break;    case invite.Top:     oPopup.style.top = "2px";     break;    case invite.Right:     oPopup.style.right = "2px";     break;    case invite.Bottom:     oPopup.style.bottom = "2px";     break;   }   switch (jsonObj.InviteDockSetting.DockOffsetFrom)   {    case invite.Left:     oPopup.style.left = jsonObj.InviteDockSetting.DockOffset + "%";     break;    case invite.Top:     oPopup.style.top = jsonObj.InviteDockSetting.DockOffset + "%";     break;    case invite.Right:     oPopup.style.right = jsonObj.InviteDockSetting.DockOffset + "%";     break;    case invite.Bottom:     oPopup.style.bottom = jsonObj.InviteDockSetting.DockOffset + "%";     break;   }  }  else  {   var isMobile = (navigator.userAgent.search(/\smobile\s?/ig) >= 0);   if (isMobile) {    oPopup.style.position = "fixed";    jsonObj.HPosition = parseInt((document.documentElement.clientWidth - parseInt(oPopup.style.width)) / 2);    jsonObj.VPosition = parseInt((document.documentElement.clientHeight - parseInt(oPopup.style.height)) / 2);    jsonObj.HPositionFrom = invite.Left;    jsonObj.VPositionFrom = invite.Top;   }   else {    oPopup.style.position = "absolute";   }   if (jsonObj.HPositionFrom == invite.Left)   {    oPopup.style.right = 'auto';    oPopup.style.left = jsonObj.HPosition + 'px';   }   else   {    oPopup.style.left = 'auto';    oPopup.style.right = jsonObj.HPosition + 'px';   }   if (jsonObj.VPositionFrom == invite.Top)   {    oPopup.style.bottom = 'auto';    oPopup.style.top = jsonObj.VPosition + 'px';   }   else   {    oPopup.style.top = 'auto';    oPopup.style.bottom = jsonObj.VPosition + 'px';   }   if (jsonObj.DisplayStyle == 2 && !isMobile) {    proactive.SlideOption.HSlideTo = jsonObj.InviteSilideSetting.HSlideTo;    proactive.SlideOption.VSlideTo = jsonObj.InviteSilideSetting.VSlideTo;    proactive.SlideOption.SlideAt = jsonObj.InviteSilideSetting.SlideAt;    proactive.SlideOption.SlideOf = jsonObj.InviteSilideSetting.SlideOf;    proactive.SlideOption.SlideFor = jsonObj.InviteSilideSetting.SlideFor;    proactive.SlideOption.SlideHStopAt = jsonObj.InviteSilideSetting.SlideHStopAt;    proactive.SlideOption.SlideVStopAt = jsonObj.InviteSilideSetting.SlideVStopAt;    var dt = new Date();    proactive.SlideOption.SlideStopAt = proactive.SlideOption.SlideStartedAt = dt;    if (proactive.SlideOption.SlideOf == 1)proactive.SlideOption.SlideStopAt.setSeconds(dt.getSeconds() + proactive.SlideOption.SlideFor);    proactive.StartSliding();   }  }  oPopup.style.zIndex = jsonObj.zIndex;  oPopup.style.visibility = "visible"; } function slideInvite() {  proactive.SlideOption.SlideTimer = null;  var slideOf = proactive.SlideOption.SlideOf;  var left = parseInt(oPopup.style.left);  var top = parseInt(oPopup.style.top);  if (slideOf == 2)  {   if (left < proactive.SlideOption.SlideHStopAt)    oPopup.style.left = left + proactive.SlideOption.HSlideTo + 'px';   if (top < proactive.SlideOption.SlideVStopAt)    oPopup.style.top = top + proactive.SlideOption.VSlideTo + 'px';   if (left < proactive.SlideOption.SlideHStopAt || top < proactive.SlideOption.SlideVStopAt)   {    proactive.StartSliding();   }  }  else if (slideOf == 1)  {   var dt = new Date();   if (dt >= proactive.SlideOption.SlideStopAt)return;   oPopup.style.left = left + proactive.SlideOption.HSlideTo + 'px';   oPopup.style.top = top + proactive.SlideOption.VSlideTo + 'px';   proactive.StartSliding();  } } var slideOffSetX = 0; var slideOffSetY = 0; var stopSliding = false; var slideEnded = false; function offsetInvite(oPopupWin) { return; var scrOffSet = getScrollOffset(); var dim = getWindowDimensions();  var left = getInvLeftOffset(scrOffSet.scrOfX, dim.width, invWdt+20);  var top = getInvTopOffset(scrOffSet.scrOfY, dim.height, invHgt+20);  var oPopupWin = document.getElementById("popupwin");  oPopupWin.style.top = top + "px";oPopupWin.style.left = left + "px"; } function hideInvite(accepted, force) {  if (proactive.SlideOption.SlideTimer)clearTimeout(proactive.SlideOption.SlideTimer);  if (force != true && ProStatus == inviteStatus.Reactive)return;  document.getElementById("popupwin").style.display="none"; } function setCookie(name, value, expires, path, domain, secure) {  var curCookie = name + "=" + escape(value) + ((expires) ? "; expires=" + expires.toUTCString() : "") + ((path) ? "; path=" + path : "") +  ((domain) ? "; domain=" + domain : "") + ((secure) ? "; secure" : ""); document.cookie = curCookie; } function getCookie(name) {  if (undefined == name || null == name || 0 == name.length || undefined == document.cookie || null == document.cookie || 0 == document.cookie.length)  {   return null;  }  var regEx = new RegExp("(^|; )" + name + "=[^;]+", "i");  var matchData = document.cookie.match(regEx);  if (null == matchData)  {   return null;  }  return unescape(matchData[0].split("=")[1]); } function getDateStringFromUTCString(utcString) {  utcString = utcString.substr(5);  utcString = utcString.substr(0,20);  return utcString; } function ProactiveAccept(element) {  if(element.id != "proactiveaccept" ){return;}  var now = new Date();  pollServer(5);  hideInvite(true);  showChat(proactive.InviteJSON); } function ProactiveDecline(element,flag) { if(element.id != "proactivedecline" && element.id != "proactiveminimize"){return;}  clearTimeout(pollTimerId);pollTimerId = null;  if (typeof(flag) == "number" && flag == 1)  {setNeverInviteCookie(0); pollServer(10);}  else {pollServer(7);} if (flag != 2)hideInvite(false); }   function ProactivetimeOutInvite() { hideInvite(false); pollServer(11); }  function setNeverInviteCookie(inVal) { var dt; switch(inVal) {  case 2: dt = new Date(2000,1,1); break;  default: dt = new Date(9999,1,1); break; } setCookie("NeverInvite",1,dt); } function PortalBlocked() {  pollServer(8); } function mouseOverInvitation(){proactive.PauseSliding();}  function mouseOutOfInvitation(){proactive.ResumeSliding();}function ProactiveResize(element, sizeVal, onPageLoad){ if (proactive.InviteJSON == null || proactive.InviteJSON.MiniEnabled != true)return; var miniImg = document.createElement("img"); miniImg.onload = function () { var Width = miniImg.width; var Height = miniImg.height; ProactiveResizeDisplay(element, sizeVal, Width, Height, onPageLoad) }; miniImg.src = proactive.InviteJSON.InviteMinimizeSetting.MiniImgUri; if (onPageLoad != true)pollServer(13);}function ProactiveResizeDisplay(element, sizeVal, Width, Height, onPageLoad){ if (proactive.InviteJSON == null || proactive.InviteJSON.MiniEnabled != true)return; var chatMapType = "rect"; var closeMapType = "rect"; if (onPageLoad != true) {  oPopup.style.transitionProperty = "height,width,top,left,right,bottom";  oPopup.style.transitionDuration = "1s"; } var vPopUp = '<img id="inv" style="border:0px;width:100%;height:100%;" usemap="#imageMap" style="border:0px none;" src="' + proactive.InviteJSON.InviteMinimizeSetting.MiniImgUri + '"/><map name="imageMap">'; if (typeof (proactive.InviteJSON.InviteMinimizeSetting.MiniCloseImgMap) != 'undefined') {  if (proactive.InviteJSON.InviteMinimizeSetting.MiniCloseImgMap.split(",").length > 4) closeMapType = "poly";  vPopUp += '<area shape="' + closeMapType + '" coords="' + proactive.InviteJSON.InviteMinimizeSetting.MiniCloseImgMap + '" href="javascript:void(0)" ' +  'onclick="javascript:ProactiveClose(this)" id="proactiveclose" onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />'; } if (typeof (proactive.InviteJSON.InviteMinimizeSetting.MiniChatImgMap) != 'undefined') {  if (proactive.InviteJSON.InviteMinimizeSetting.MiniChatImgMap.split(",").length > 4) chatMapType = "poly";  vPopUp += '<area shape="' + chatMapType + '" coords="' + proactive.InviteJSON.InviteMinimizeSetting.MiniChatImgMap + '" href="javascript:void(0)" onclick="javascript:ProactiveChat(this,0)" ' +  'onmouseover="mouseOverInvitation()" onmouseout="mouseOutOfInvitation()" />'; } vPopUp += '</map>'; oPopup.innerHTML = vPopUp; oPopup.style.position = "fixed"; oPopup.style.border = '0px'; oPopup.style.left = 'auto'; oPopup.style.right = 'auto'; oPopup.style.bottom = 'auto'; oPopup.style.top = 'auto'; switch (proactive.InviteJSON.InviteMinimizeSetting.MiniDockType) {  case invite.Left:   oPopup.style.left = "2px";   break;  case invite.Top:   oPopup.style.top = "2px";   break;  case invite.Right:   oPopup.style.right = "2px";   break;  case invite.Bottom:   oPopup.style.bottom = "2px";   break; } switch (proactive.InviteJSON.InviteMinimizeSetting.MiniOffsetFrom) {  case invite.Left:   oPopup.style.left = proactive.InviteJSON.InviteMinimizeSetting.MiniOffset + "%";   break;  case invite.Top:   oPopup.style.top = proactive.InviteJSON.InviteMinimizeSetting.MiniOffset + "%";   break;  case invite.Right:   oPopup.style.right = proactive.InviteJSON.InviteMinimizeSetting.MiniOffset + "%";   break;  case invite.Bottom:   oPopup.style.bottom = proactive.InviteJSON.InviteMinimizeSetting.MiniOffset + "%";   break; } oPopup.style.zIndex = proactive.InviteJSON.zIndex; oPopup.style.visibility = "visible"; oPopup.style.height = Height + 'px'; oPopup.style.width = Width + 'px'; ProStatus = inviteStatus.Reactive; /*if (onPageLoad != true) ProactiveDecline(element, sizeVal);*/}function ProactiveClose(element){ hideInvite(false, true); pollServer(14);}function ProactiveChat(element){ hideInvite(false, true); pollServer(14); showChat(proactive.InviteJSON);}